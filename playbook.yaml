- hosts: localhost
  become: true

  vars:
    ansible_python_interpreter: /usr/bin/python3
    app_env: "{{ lookup('aws_ssm', '{{ ssm_path }}laravel_env', bypath=true, shortnames=true, decrypt=true, recursive=true, region='eu-west-2') }}"
    app_directory: "{{ lookup('aws_ssm', '{{ ssm_path }}app_directory', region='eu-west-2') }}"

  tasks:
    - name: Build env file
      no_log: False
      lineinfile:
        path: "{{ app_directory }}/.env"
        regex: "^{{ item.key }}="
        line: "{{ item.key }}={{ item.value }}"
      with_dict:
        - "{{  app_env|dict2items|rejectattr(\"key\", \"equalto\", \"key.pem\")|rejectattr(\"key\", \"equalto\", \"cert.pem\")|list|items2dict }}"

    - name: Disable laravel error logging
      lineinfile:
        path: "{{app_directory}}/.env"
        regex: "^APP_DEBUG="
        line: "APP_DEBUG=false"
      when: project_env == "production"

    - name: Run artisan migrate
      shell: 'php artisan migrate --force --isolated'
      args:
        chdir: "{{ app_directory }}"

    # - name: Limit amazon-cloudwatch-agent CPU
    #   no_log: True
    #   lineinfile:
    #       path: /etc/systemd/system/amazon-cloudwatch-agent.service
    #       regexp: '^RestartSec=60s'
    #       line: 'RestartSec=60s\nCPUQuota=30%'
    #       backrefs: yes

    # - name: Restart Amazon CloudWatch Agent
    #   no_log: True
    #   service:
    #     name: amazon-cloudwatch-agent
    #     state: restarted

    - name: start supervisor
      no_log: True
      systemd:
        state: started
        name: supervisor
        enabled: yes

